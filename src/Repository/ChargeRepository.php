<?php

namespace App\Repository;

use App\Entity\User;
use Doctrine\ORM\EntityRepository;

/**
 * ChargeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ChargeRepository extends EntityRepository
{
    /**
     * all charge with expired date
     * @param null $condominiumId
     * @return array
     */
    public function findAllExpired($condominiumId=null) {
        if ($condominiumId) {
            return $this->createQueryBuilder('c')
                ->where('c.deadline < :today AND c.condominium = :id')
                ->setParameter('today', new \DateTime())
                ->setParameter('id', $condominiumId)
                ->getQuery()
                ->getResult();
        }
        return $this->createQueryBuilder('c')
            ->where('c.deadline < :today')
            ->setParameter('today', new \DateTime())
            ->getQuery()
            ->getResult();
    }

    public function findOwnCharge(User $user) {
        if ($user->getUsername() == 'admin') {
            return $this->createQueryBuilder('c')
                ->getQuery()
                ->getResult();
        } else if (in_array('ROLE_MANAGER', $user->getRoles())) {
            return $this->createQueryBuilder('c')
                ->join('c.user', 'u')
                ->where('c.condominium = :condominium')
                ->setParameter('condominium', $user->getCondominium()->getId())
                ->getQuery()
                ->getResult();
        }
        return $this->createQueryBuilder('c')
            ->join('c.authorizedUser', 'u')
            ->where('u.id = :user AND c.condominium = :condominium AND c.deadline > :today')
            ->setParameter('user', $user->getId())
            ->setParameter('condominium', $user->getCondominium()->getId())
            ->setParameter('today', new \DateTime())
            ->getQuery()
            ->getResult();
    }
}
